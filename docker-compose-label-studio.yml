version: "3.3"

services:

  nginx:
    image: nginx:1.21
    # ports:
    #   - "8088:80"
    #   - "8087:443"
    expose:
      - 80
    depends_on:
      - app
    environment:
      - LABEL_STUDIO_HOST=https://darelab.imsi.athenarc.gr/qr2t_annotation
      - NGINX_FILE=${NGINX_FILE:-default.conf}
#   Optional: Specify SSL termination certificate & key
#   Just drop your cert.pem and cert.key into folder 'deploy/nginx/certs'
#      - NGINX_SSL_CERT=/certs/cert.pem
#      - NGINX_SSL_CERT_KEY=/certs/cert.key
    volumes:
      # keep in sync with deploy/docker-entrypoint.d/30-copy-static-data.sh
      - source: static
        target: /label-studio/label_studio
        type: volume
        volume:
          nocopy: true
      - /home/ci/mxydas/qr2t_annotation/mydata:/label-studio/data:rw
      - label_studio/default.conf:/etc/nginx/templates/default.conf.template
      - label_studio/deploy/nginx/scripts:/docker-entrypoint.d/label-studio
      - label_studio/deploy/nginx/certs:/certs:ro
    command: nginx -g "daemon off;"
    networks:
      - app_network
      - traefik

    labels:
      - traefik.enable=true # enable this docker on traefik

      - traefik.http.routers.qr2t_annotation.rule= Host(`darelab.imsi.athenarc.gr`) && PathPrefix(`/qr2t_annotation`) # url
      - traefik.http.routers.qr2t_annotation.middlewares=redirect_to_https@file # add the middleware to redirect to https

  app:
    stdin_open: true
    tty: true
    image: heartexlabs/label-studio:latest
    ports:
      - "8080"
    depends_on:
      - db
    environment:
      - DJANGO_DB=default
      - POSTGRE_NAME=postgres
      - POSTGRE_USER=postgres
      - POSTGRE_PASSWORD=
      - POSTGRE_PORT=5432
      - POSTGRE_HOST=db
      - LABEL_STUDIO_HOST=https://darelab.imsi.athenarc.gr/qr2t_annotation
      - LABEL_STUDIO_COPY_STATIC_DATA=true
    volumes:
      - /home/ci/mxydas/qr2t_annotation/mydata:/label-studio/data:rw
      # keep in sync with deploy/docker-entrypoint.d/30-copy-static-data.sh
      - source: static
        target: /label-studio/static_volume
        type: volume
        volume:
          nocopy: true
    networks:
      - app_network

  db:
    image: postgres:11.5
    hostname: db
    restart: always
    # Optional: Enable TLS on PostgreSQL
    # Just drop your server.crt and server.key into folder 'deploy/pgsql/certs'
    # NOTE: Both files must have permissions u=rw (0600) or less
#    command: >
#      -c ssl=on
#      -c ssl_cert_file=/var/lib/postgresql/certs/server.crt
#      -c ssl_key_file=/var/lib/postgresql/certs/server.key
    environment:
      - POSTGRES_HOST_AUTH_METHOD=trust
    volumes:
      - /home/ci/mxydas/qr2t_annotation/postgres-data}:/var/lib/postgresql/data
      - label_studio/deploy/pgsql/certs:/var/lib/postgresql/certs:ro
    networks:
      - app_network

networks:
  app_network:
    name: app_network
    # external: true
  traefik:
    name: traefik
    external: true

volumes:
  static: {}
